<h1> Gimme the money </h1>

<div class="demo-frame">

  <%= form_for :checkout_form, url: check_out_path, html: { id: "cardForm"} do |form| %>

    <%= form.label :card_number, "Credit Card Number", html: {class: "hosted-fields--label"} %>
    <div id="card-number" class="hosted-field"></div>

    <%#
    = form.hidden_field :token, value: @client_toekn %>

    <%= form.label :expiration_date, "Expiration Date", html: {class: "hosted-fields--label"} %>
    <div id="expiration-date" class="hosted-field"></div>

    <%= form.label :cvv, "CVV", html: {class: "hosted-fields--label"} %>
    <div id="cvv" class="hosted-field"></div>

    <%= form.hidden_field "payment_method_nonce" %>

    <div class="button-container">
      <%= form.submit "Purchase", disabled: true, class: "btn btn-primary", id: "submit-payment-btn" %>
    </div>
  <% end %>
</div>

<!-- Load the Client component. -->
<script src="https://js.braintreegateway.com/web/3.6.3/js/client.min.js"></script>

<!-- Load the Hosted Fields component. -->
<script src="https://js.braintreegateway.com/web/3.6.3/js/hosted-fields.min.js"></script>

<script> 

// $(document).on('turbolinks:load',function(){

  var form = document.querySelector('#cardForm');
        var submit = document.querySelector	("#submit-payment-btn");
            var authorization = '<%= @client_token %>'

        braintree.client.create({
           authorization: authorization
  }, function (clientErr, clientInstance) {
    if (clientErr) {
      // Handle error in client creation
      return;
    }

          // This example shows Hosted Fields, but you can also use this
          // client instance to create additional components here, such as
          // PayPal or Data Collector.

          braintree.hostedFields.create({
            client: clientInstance,
            styles: {
              'input': {
                'font-size': '14px'
              },
              'input.invalid': {
                'color': 'red'
              },
              'input.valid': {
                'color': 'green'
              }
            },
            fields: {
              number: {
                selector: '#card-number',
                placeholder: '4111 1111 1111 1111'
              },
              cvv: {
                selector: '#cvv',
                placeholder: '123'
              },
              expirationDate: {
                selector: '#expiration-date',
                placeholder: '10/2019'
              }
            }
          }, function (hostedFieldsErr, hostedFieldsInstance) {
            if (hostedFieldsErr) {
              console.error(hostedFieldsErr);
              return;
            }

            submit.removeAttribute('disabled');

            form.addEventListener('submit', function (event) {
              event.preventDefault();

              hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
                if (tokenizeErr) {
                  console.error(tokenizeErr);
                  return;
                }

                // If this was a real integration, this is where you would
                // send the nonce to your server.
                document.querySelector('input[name="checkout_form[payment_method_nonce]"]').value = payload.nonce;
                form.submit();
              });
            }, false);
          });
        });
      // })
  </script>